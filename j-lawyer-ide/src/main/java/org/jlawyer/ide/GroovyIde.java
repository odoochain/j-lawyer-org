/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jlawyer.ide;

import groovy.lang.Script;
import groovy.util.GroovyScriptEngine;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintStream;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;

/**
 *
 * @author jens
 */
public class GroovyIde extends javax.swing.JFrame {

    /**
     * Creates new form GroovyFrame
     */
    public GroovyIde() {
        initComponents();
        
        TextAreaOutputStream tout=new TextAreaOutputStream(taError, "STDOUT");
        PrintStream pout=new PrintStream(tout);
        System.setOut(pout);
        
        TextAreaOutputStream touterr=new TextAreaOutputStream(taError, "STDERR");
        PrintStream pouterr=new PrintStream(touterr);
        System.setErr(pouterr);
        
        DefaultListModel dm = new DefaultListModel();
        File dir = new File(".");
        for (File f : dir.listFiles()) {
            if (f.getName().toLowerCase().endsWith("_ui.groovy")) {
                dm.addElement(f.getName());
            }
        }

        this.lstFiles.setModel(dm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taError = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstFiles = new javax.swing.JList<>();
        cmdRun = new javax.swing.JButton();
        lblPosition = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        taFile = new javax.swing.JTextArea();
        scrollUi = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("j-lawyer.org Falldatenblatteditor");

        jSplitPane2.setDividerLocation(150);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        taError.setEditable(false);
        taError.setBackground(new java.awt.Color(204, 204, 204));
        taError.setColumns(20);
        taError.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        taError.setForeground(new java.awt.Color(204, 0, 0));
        taError.setRows(5);
        jScrollPane1.setViewportView(taError);

        lstFiles.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstFiles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstFiles.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        lstFiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstFilesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstFiles);

        cmdRun.setText("Ausf√ºhren");
        cmdRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRunActionPerformed(evt);
            }
        });

        lblPosition.setText("--");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmdRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmdRun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPosition)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        jSplitPane2.setLeftComponent(jPanel1);

        jSplitPane1.setResizeWeight(0.5);

        taFile.setColumns(20);
        taFile.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        taFile.setRows(5);
        taFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taFileMouseClicked(evt);
            }
        });
        taFile.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                taFileCaretPositionChanged(evt);
            }
        });
        taFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                taFileKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(taFile);

        jSplitPane1.setLeftComponent(jScrollPane3);

        scrollUi.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollUi.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jSplitPane1.setRightComponent(scrollUi);

        jSplitPane2.setRightComponent(jSplitPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 986, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRunActionPerformed
        this.taError.setText("");
        this.scrollUi.getViewport().removeAll();
        if (this.lstFiles.getSelectedValue() == null) {
            return;
        }

        File f = new File(this.lstFiles.getSelectedValue().toString());
        if (!f.exists()) {
            this.taError.setText("Datei existiert nicht: " + f.getAbsolutePath());
            return;
        }

        try {
            FileWriter fw = new FileWriter(f);
            fw.write(this.taFile.getText());
            fw.close();
            
        } catch (Throwable t) {
            this.taError.setText(t.getMessage());
            return;
        }

        try {
            
            Class scriptClass = new GroovyScriptEngine(".").loadScriptByName(this.lstFiles.getSelectedValue().toString());
            
            Object scriptInstance = scriptClass.newInstance();
            Object result = scriptClass.getDeclaredMethod("getUi", new Class[]{}).invoke(scriptInstance, new Object[]{});
            System.out.println(result.toString());
//    result=scriptClass.getDeclaredMethod( "setResult", new Class[] {List.class} ).invoke( scriptInstance, new Object[] {(List)result} ) ;
//    System.out.println(result.toString());
            
            this.scrollUi.getViewport().add(((JPanel) result));
        } catch (Throwable t) {
            this.taError.setText(t.getMessage());
        }
    }//GEN-LAST:event_cmdRunActionPerformed

    private void lstFilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstFilesMouseClicked
        if (this.lstFiles.getSelectedValue() == null) {
            return;
        }

        File f = new File(this.lstFiles.getSelectedValue().toString());
        try {
            String content = readFileAsString(f);
            this.taFile.setText(content);
        } catch (Throwable t) {
            this.taError.setText(t.getMessage());
        }

    }//GEN-LAST:event_lstFilesMouseClicked

    private void taFileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taFileKeyReleased
        int pos=this.taFile.getCaretPosition();
        try {
        int line=this.taFile.getLineOfOffset(pos);
        this.lblPosition.setText("Zeile: " + line);
        } catch (Exception ex) {
            this.lblPosition.setText("Zeile: --");
        }
    }//GEN-LAST:event_taFileKeyReleased

    private void taFileCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_taFileCaretPositionChanged
        
    }//GEN-LAST:event_taFileCaretPositionChanged

    private void taFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taFileMouseClicked
        int pos=this.taFile.getCaretPosition();
        try {
        int line=this.taFile.getLineOfOffset(pos);
        this.lblPosition.setText("Zeile: " + line);
        } catch (Exception ex) {
            this.lblPosition.setText("Zeile: --");
        }
    }//GEN-LAST:event_taFileMouseClicked

    static String readFileAsString(File file) throws Exception {
        FileReader fileReader = new FileReader(file);
        BufferedReader br = new BufferedReader(fileReader);
        StringBuilder sb = new StringBuilder();
        String line = br.readLine();

        while (line != null) {
            sb.append(line);
            sb.append(System.lineSeparator());
            line = br.readLine();
        }
        br.close();
        fileReader.close();
        return sb.toString();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GroovyIde.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GroovyIde.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GroovyIde.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GroovyIde.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GroovyIde().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdRun;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JList<String> lstFiles;
    private javax.swing.JScrollPane scrollUi;
    private javax.swing.JTextArea taError;
    private javax.swing.JTextArea taFile;
    // End of variables declaration//GEN-END:variables
}
